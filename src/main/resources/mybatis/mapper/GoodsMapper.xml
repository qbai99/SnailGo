<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.springboot.helloworld.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.demo.springboot.helloworld.common.domain.Goods">
    <id column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="cart_id" jdbcType="INTEGER" property="cartId" />
    <result column="goods_price" jdbcType="DOUBLE" property="goodsPrice" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_remaning" jdbcType="INTEGER" property="goodsRemaning" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, shop_id, order_id, cart_id, goods_price, goods_name, goods_remaning
  </sql>
  <select id="selectByExample" parameterType="com.demo.springboot.helloworld.common.domain.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.springboot.helloworld.common.domain.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.springboot.helloworld.common.domain.Goods">
    insert into goods (goods_id, shop_id, order_id, 
      cart_id, goods_price, goods_name, 
      goods_remaning)
    values (#{goodsId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
      #{cartId,jdbcType=INTEGER}, #{goodsPrice,jdbcType=DOUBLE}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsRemaning,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.springboot.helloworld.common.domain.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="cartId != null">
        cart_id,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsRemaning != null">
        goods_remaning,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="cartId != null">
        #{cartId,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsRemaning != null">
        #{goodsRemaning,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.springboot.helloworld.common.domain.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.cartId != null">
        cart_id = #{record.cartId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsRemaning != null">
        goods_remaning = #{record.goodsRemaning,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      cart_id = #{record.cartId,jdbcType=INTEGER},
      goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_remaning = #{record.goodsRemaning,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.springboot.helloworld.common.domain.Goods">
    update goods
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="cartId != null">
        cart_id = #{cartId,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsRemaning != null">
        goods_remaning = #{goodsRemaning,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.springboot.helloworld.common.domain.Goods">
    update goods
    set shop_id = #{shopId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      cart_id = #{cartId,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_remaning = #{goodsRemaning,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
</mapper>