<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.springboot.helloworld.mapper.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.demo.springboot.helloworld.common.domain.Userinfo">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="sign_up_id" jdbcType="BIGINT" property="signUpId" />
    <result column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="finance_id" jdbcType="BIGINT" property="financeId" />
    <result column="use_level_id" jdbcType="BIGINT" property="useLevelId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="user_admin" jdbcType="VARCHAR" property="userAdmin" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="usersex" jdbcType="INTEGER" property="usersex" />
    <result column="user_birthdate" jdbcType="CHAR" property="userBirthdate" />
    <result column="user_phonenumber" jdbcType="CHAR" property="userPhonenumber" />
    <result column="user_tag" jdbcType="BIT" property="userTag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.demo.springboot.helloworld.common.domain.UserinfoWithBLOBs">
    <result column="user_img" jdbcType="LONGVARBINARY" property="userImg" />
    <result column="user_introduction" jdbcType="LONGVARCHAR" property="userIntroduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, message_id, sign_up_id, login_id, finance_id, use_level_id, shop_id, user_admin, 
    user_name, user_password, usersex, user_birthdate, user_phonenumber, user_tag
  </sql>
  <sql id="Blob_Column_List">
    user_img, user_introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoWithBLOBs">
    insert into user_info (user_id, message_id, sign_up_id, 
      login_id, finance_id, use_level_id, 
      shop_id, user_admin, user_name, 
      user_password, usersex, user_birthdate, 
      user_phonenumber, user_tag, user_img, 
      user_introduction)
    values (#{userId,jdbcType=BIGINT}, #{messageId,jdbcType=INTEGER}, #{signUpId,jdbcType=BIGINT}, 
      #{loginId,jdbcType=INTEGER}, #{financeId,jdbcType=BIGINT}, #{useLevelId,jdbcType=BIGINT}, 
      #{shopId,jdbcType=BIGINT}, #{userAdmin,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{usersex,jdbcType=INTEGER}, #{userBirthdate,jdbcType=CHAR}, 
      #{userPhonenumber,jdbcType=CHAR}, #{userTag,jdbcType=BIT}, #{userImg,jdbcType=LONGVARBINARY}, 
      #{userIntroduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoWithBLOBs">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="signUpId != null">
        sign_up_id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="financeId != null">
        finance_id,
      </if>
      <if test="useLevelId != null">
        use_level_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="userAdmin != null">
        user_admin,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="usersex != null">
        usersex,
      </if>
      <if test="userBirthdate != null">
        user_birthdate,
      </if>
      <if test="userPhonenumber != null">
        user_phonenumber,
      </if>
      <if test="userTag != null">
        user_tag,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
      <if test="userIntroduction != null">
        user_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="signUpId != null">
        #{signUpId,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="financeId != null">
        #{financeId,jdbcType=BIGINT},
      </if>
      <if test="useLevelId != null">
        #{useLevelId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userAdmin != null">
        #{userAdmin,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null">
        #{usersex,jdbcType=INTEGER},
      </if>
      <if test="userBirthdate != null">
        #{userBirthdate,jdbcType=CHAR},
      </if>
      <if test="userPhonenumber != null">
        #{userPhonenumber,jdbcType=CHAR},
      </if>
      <if test="userTag != null">
        #{userTag,jdbcType=BIT},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=LONGVARBINARY},
      </if>
      <if test="userIntroduction != null">
        #{userIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.signUpId != null">
        sign_up_id = #{record.signUpId,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.financeId != null">
        finance_id = #{record.financeId,jdbcType=BIGINT},
      </if>
      <if test="record.useLevelId != null">
        use_level_id = #{record.useLevelId,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.userAdmin != null">
        user_admin = #{record.userAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.usersex != null">
        usersex = #{record.usersex,jdbcType=INTEGER},
      </if>
      <if test="record.userBirthdate != null">
        user_birthdate = #{record.userBirthdate,jdbcType=CHAR},
      </if>
      <if test="record.userPhonenumber != null">
        user_phonenumber = #{record.userPhonenumber,jdbcType=CHAR},
      </if>
      <if test="record.userTag != null">
        user_tag = #{record.userTag,jdbcType=BIT},
      </if>
      <if test="record.userImg != null">
        user_img = #{record.userImg,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.userIntroduction != null">
        user_introduction = #{record.userIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user_info
    set user_id = #{record.userId,jdbcType=BIGINT},
      message_id = #{record.messageId,jdbcType=INTEGER},
      sign_up_id = #{record.signUpId,jdbcType=BIGINT},
      login_id = #{record.loginId,jdbcType=INTEGER},
      finance_id = #{record.financeId,jdbcType=BIGINT},
      use_level_id = #{record.useLevelId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      user_admin = #{record.userAdmin,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      usersex = #{record.usersex,jdbcType=INTEGER},
      user_birthdate = #{record.userBirthdate,jdbcType=CHAR},
      user_phonenumber = #{record.userPhonenumber,jdbcType=CHAR},
      user_tag = #{record.userTag,jdbcType=BIT},
      user_img = #{record.userImg,jdbcType=LONGVARBINARY},
      user_introduction = #{record.userIntroduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set user_id = #{record.userId,jdbcType=BIGINT},
      message_id = #{record.messageId,jdbcType=INTEGER},
      sign_up_id = #{record.signUpId,jdbcType=BIGINT},
      login_id = #{record.loginId,jdbcType=INTEGER},
      finance_id = #{record.financeId,jdbcType=BIGINT},
      use_level_id = #{record.useLevelId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      user_admin = #{record.userAdmin,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      usersex = #{record.usersex,jdbcType=INTEGER},
      user_birthdate = #{record.userBirthdate,jdbcType=CHAR},
      user_phonenumber = #{record.userPhonenumber,jdbcType=CHAR},
      user_tag = #{record.userTag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoWithBLOBs">
    update user_info
    <set>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=INTEGER},
      </if>
      <if test="signUpId != null">
        sign_up_id = #{signUpId,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=INTEGER},
      </if>
      <if test="financeId != null">
        finance_id = #{financeId,jdbcType=BIGINT},
      </if>
      <if test="useLevelId != null">
        use_level_id = #{useLevelId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userAdmin != null">
        user_admin = #{userAdmin,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null">
        usersex = #{usersex,jdbcType=INTEGER},
      </if>
      <if test="userBirthdate != null">
        user_birthdate = #{userBirthdate,jdbcType=CHAR},
      </if>
      <if test="userPhonenumber != null">
        user_phonenumber = #{userPhonenumber,jdbcType=CHAR},
      </if>
      <if test="userTag != null">
        user_tag = #{userTag,jdbcType=BIT},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=LONGVARBINARY},
      </if>
      <if test="userIntroduction != null">
        user_introduction = #{userIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.demo.springboot.helloworld.common.domain.UserinfoWithBLOBs">
    update user_info
    set message_id = #{messageId,jdbcType=INTEGER},
      sign_up_id = #{signUpId,jdbcType=BIGINT},
      login_id = #{loginId,jdbcType=INTEGER},
      finance_id = #{financeId,jdbcType=BIGINT},
      use_level_id = #{useLevelId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      user_admin = #{userAdmin,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      usersex = #{usersex,jdbcType=INTEGER},
      user_birthdate = #{userBirthdate,jdbcType=CHAR},
      user_phonenumber = #{userPhonenumber,jdbcType=CHAR},
      user_tag = #{userTag,jdbcType=BIT},
      user_img = #{userImg,jdbcType=LONGVARBINARY},
      user_introduction = #{userIntroduction,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.springboot.helloworld.common.domain.Userinfo">
    update user_info
    set message_id = #{messageId,jdbcType=INTEGER},
      sign_up_id = #{signUpId,jdbcType=BIGINT},
      login_id = #{loginId,jdbcType=INTEGER},
      finance_id = #{financeId,jdbcType=BIGINT},
      use_level_id = #{useLevelId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      user_admin = #{userAdmin,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      usersex = #{usersex,jdbcType=INTEGER},
      user_birthdate = #{userBirthdate,jdbcType=CHAR},
      user_phonenumber = #{userPhonenumber,jdbcType=CHAR},
      user_tag = #{userTag,jdbcType=BIT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectid" parameterType="java.lang.String" resultType="java.lang.Long">
    select user_id as userId from user_info where user_admin=#{username,jdbcType=VARCHAR}
  </select>
</mapper>